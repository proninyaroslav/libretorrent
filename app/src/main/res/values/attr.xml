<?xml version="1.0" encoding="utf-8"?>
<resources>
    <attr name="colorOk" format="color" />
    <attr name="colorOnOk" format="color" />
    <attr name="colorOkContainer" format="color" />
    <attr name="colorOnOkContainer" format="color" />

    <declare-styleable name="dynamic_style_attrs">
        <attr name="background" format="reference" />
        <attr name="foreground" format="reference" />
        <attr name="toolbarColor" format="reference" />
        <attr name="backgroundBlank" format="reference" />
        <attr name="backgroundDialog" format="reference" />
        <attr name="statusBarColor" format="reference" />
        <attr name="popupTheme" format="reference" />
        <attr name="divider" format="reference" />
        <attr name="defaultRectRipple" format="reference" />
        <attr name="defaultRoundRipple" format="reference" />
        <attr name="selectableColor" format="reference" />
        <attr name="selectableDrawer" format="reference" />
        <attr name="transparentRoundRipple" format="reference" />
        <attr name="dialogRectRipple" format="reference" />
        <attr name="pieceCellColor" format="reference" />
        <attr name="tabLayoutTheme" format="reference" />
        <attr name="speedDialOverlayColor" format="reference" />
    </declare-styleable>

    <declare-styleable name="ExpansionHeader">
        <attr name="expansion_text" format="string" />
        <attr name="expansion_expanded" format="boolean"/>
        <attr name="expansion_textAppearance" format="reference" />
    </declare-styleable>

    <declare-styleable name="PiecesView">
        <attr name="pieces_cellColor" format="color" />
    </declare-styleable>

    <declare-styleable name="ColorView">
        <attr name="color" format="color" />
    </declare-styleable>

    <declare-styleable name="Theme">
        <attr name="morphButtonStyle" format="reference"/>
    </declare-styleable>

    <declare-styleable name="EmptyListPlaceholder">
        <attr name="text" format="reference|string" />
        <attr name="icon" format="reference" />
    </declare-styleable>

    <attr name="vc_tintMode" format="enum">
        <!-- The tint is drawn on top of the drawable.
             [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
        <enum name="src_over" value="3" />
        <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
             color channels are thrown out. [Sa * Da, Sc * Da] -->
        <enum name="src_in" value="5" />
        <!-- The tint is drawn above the drawable, but with the drawable’s alpha
             channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
        <enum name="src_atop" value="9" />
        <!-- Multiplies the color and alpha channels of the drawable with those of
             the tint. [Sa * Da, Sc * Dc] -->
        <enum name="multiply" value="14" />
        <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
        <enum name="screen" value="15" />
        <!-- Combines the tint and drawable color and alpha channels, clamping the
             result to valid color values. Saturate(S + D) -->
        <enum name="add" value="16" />
    </attr>
    <attr name="vc_autoMirrored" format="boolean"/>
    <attr name="vc_tint" format="color"/>
    <attr name="vc_pathData" format="string" />

    <!-- ========================== -->
    <!--   VectorDrawable class   -->
    <!-- ========================== -->
    <eat-comment />
    <declare-styleable name="MorphButton">
        <attr name="vc_startDrawable" format="reference"/>
        <attr name="vc_endDrawable" format="reference"/>
        <attr name="android:scaleType"/>
        <attr name="vc_autoStartAnimation" format="boolean"/>
        <!-- Tint to apply to the background. -->
        <attr name="vc_backgroundTint" format="color" />

        <!-- Blending mode used to apply the background tint. -->
        <attr name="vc_backgroundTintMode">
            <!-- The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
            <enum name="src_over" value="3" />
            <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] -->
            <enum name="src_in" value="5" />
            <!-- The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
            <enum name="src_atop" value="9" />
            <!-- Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] -->
            <enum name="multiply" value="14" />
            <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
            <enum name="screen" value="15" />
            <!-- Combines the tint and drawable color and alpha channels, clamping the
                 result to valid color values. Saturate(S + D) -->
            <enum name="add" value="16" />
        </attr>
        <!-- Tint to apply to the foreground drawables. -->
        <attr name="vc_foregroundTint" format="color" />

        <!-- Blending mode used to apply the background tint. -->
        <attr name="vc_foregroundTintMode">
            <!-- The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
            <enum name="src_over" value="3" />
            <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] -->
            <enum name="src_in" value="5" />
            <!-- The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
            <enum name="src_atop" value="9" />
            <!-- Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] -->
            <enum name="multiply" value="14" />
            <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
            <enum name="screen" value="15" />
            <!-- Combines the tint and drawable color and alpha channels, clamping the
                 result to valid color values. Saturate(S + D) -->
            <enum name="add" value="16" />
        </attr>
    </declare-styleable>


    <!-- ========================== -->
    <!--   VectorDrawable class     -->
    <!-- ========================== -->
    <eat-comment />
    <!-- Drawable used to draw menu_vector paths. -->
    <declare-styleable name="VectorDrawable">
        <!-- If set, specifies the color to apply to the drawable as a tint. By default,
             no tint is applied. May be a color state list. -->
        <attr name="vc_tint" />
        <!-- When a tint color is set, specifies its Porter-Duff blending mode. The
             default value is src_in, which treats the drawable as an alpha mask. -->
        <attr name="vc_tintMode" />
        <!-- Indicates if the drawable needs to be mirrored when its layout direction is
             RTL (right-to-left). -->
        <attr name="vc_autoMirrored" />
        <!-- The intrinsic width of the Vector Drawable. -->
        <attr name="android:width" />
        <!-- The intrinsic height of the Vector Drawable. -->
        <attr name="android:height" />
        <!-- The width of the canvas the drawing is on. -->
        <attr name="vc_viewportWidth" format="float"/>
        <!-- The height of the canvas the drawing is on. -->
        <attr name="vc_viewportHeight" format="float"/>
        <!-- The name of this menu_vector drawable -->
        <attr name="android:name" />
        <!-- The opacity of the whole menu_vector drawable, as a value between 0
             (completely transparent) and 1 (completely opaque). -->
        <attr name="android:alpha" />
    </declare-styleable>
    <!-- Defines the group used in VectorDrawables. -->
    <declare-styleable name="VectorDrawableGroup">
        <!-- The name of this group -->
        <attr name="android:name" />
        <!-- The amount to rotate the group -->
        <attr name="android:rotation" />
        <!-- The X coordinate of the center of rotation of a group -->
        <attr name="android:pivotX" />
        <!-- The Y coordinate of the center of rotation of a group -->
        <attr name="android:pivotY" />
        <!-- The amount to translate the group on X coordinate -->
        <attr name="vc_translateX" format="float"/>
        <!-- The amount to translate the group on Y coordinate -->
        <attr name="vc_translateY" format="float"/>
        <!-- The amount to scale the group on X coordinate -->
        <attr name="android:scaleX" />
        <!-- The amount to scale the group on X coordinate -->
        <attr name="android:scaleY" />
    </declare-styleable>
    <!-- Defines the path used in VectorDrawables. -->
    <declare-styleable name="VectorDrawablePath">
        <!-- The name of this path -->
        <attr name="android:name" />
        <!-- The width a path stroke -->
        <attr name="vc_strokeWidth" format="float" />
        <!-- The color to stroke the path if not defined implies no stroke-->
        <attr name="vc_strokeColor" format="color" />
        <!-- The opacity of a path stroke, as a value between 0 (completely transparent)
             and 1 (completely opaque) -->
        <attr name="vc_strokeAlpha" format="float" />
        <!-- The color to fill the path if not defined implies no fill-->
        <attr name="vc_fillColor" format="color" />
        <!-- The alpha of the path fill, as a value between 0 (completely transparent)
             and 1 (completely opaque)-->
        <attr name="vc_fillAlpha" format="float" />
        <!-- The specification of the operations that define the path  -->
        <attr name="vc_pathData" />
        <!-- The fraction of the path to trim from the start from 0 to 1 -->
        <attr name="vc_trimPathStart" format="float" />
        <!-- The fraction of the path to trim from the end from 0 to 1  -->
        <attr name="vc_trimPathEnd" format="float" />
        <!-- Shift trim region (allows visible region to include the start and end) from 0 to 1  -->
        <attr name="vc_trimPathOffset" format="float" />
        <!-- sets the linecap for a stroked path -->
        <attr name="vc_strokeLineCap" format="enum">
            <enum name="butt" value="0"/>
            <enum name="round" value="1"/>
            <enum name="square" value="2"/>
        </attr>
        <!-- sets the lineJoin for a stroked path -->
        <attr name="vc_strokeLineJoin" format="enum">
            <enum name="miter" value="0"/>
            <enum name="round" value="1"/>
            <enum name="bevel" value="2"/>
        </attr>
        <!-- sets the Miter limit for a stroked path -->
        <attr name="vc_strokeMiterLimit" format="float"/>
    </declare-styleable>
    <!-- Defines the clip path used in VectorDrawables. -->
    <declare-styleable name="VectorDrawableClipPath">
        <!-- The Name of this path -->
        <attr name="android:name" />
        <!-- The specification of the operations that define the path  -->
        <attr name="vc_pathData"/>
    </declare-styleable>


    <!-- ========================== -->
    <!--   AnimatedVectorDrawable class   -->
    <!-- ========================== -->
    <eat-comment />
    <!-- Define the AnimatedVectorDrawable. -->
    <declare-styleable name="AnimatedVectorDrawable">
        <!-- The static menu_vector drawable. -->
        <attr name="android:drawable" />
    </declare-styleable>
    <!-- Defines the target used in the AnimatedVectorDrawable. -->
    <declare-styleable name="AnimatedVectorDrawableTarget">
        <!-- The name of the target path, group or menu_vector drawable -->
        <attr name="android:name" />
        <!-- The animation for the target path, group or menu_vector drawable -->
        <attr name="android:animation" />
    </declare-styleable>


    <!-- ========================== -->
    <!-- ValueAnimator class attributes -->
    <!-- ========================== -->
    <eat-comment />
    <declare-styleable name="Animator">
        <!-- Defines the interpolator used to smooth the animation movement in time. -->
        <attr name="android:interpolator" />
        <!-- Amount of time (in milliseconds) for the animation to run. -->
        <attr name="android:duration" />
        <!-- Delay in milliseconds before the animation runs, once start time is reached. -->
        <attr name="android:startOffset"/>
        <!-- Defines how many times the animation should repeat. The default value is 0. -->
        <attr name="android:repeatCount" />
        <!-- Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. -->
        <attr name="android:repeatMode" />
        <!-- Value the animation starts from. -->
        <attr name="android:valueFrom" />
        <!-- Value the animation animates to. -->
        <attr name="android:valueTo" />
        <!-- The type of valueFrom and valueTo. -->
        <attr name="vc_valueType">
            <!-- valueFrom and valueTo are floats. This is the default value is valueType is
                 unspecified. Note that if either valueFrom or valueTo represent colors
                 (beginning with "#"), then this attribute is ignored and the color values are
                 interpreted as integers. -->
            <enum name="floatType" value="0" />
            <!-- valueFrom and valueTo are integers. -->
            <enum name="intType"   value="1" />
            <!-- valueFrom and valueTo are paths defined as strings.
                 This type is used for path morphing in AnimatedVectorDrawable. -->
            <enum name="pathType"   value="2" />
        </attr>
    </declare-styleable>

    <!-- ========================== -->
    <!-- ObjectAnimator class attributes -->
    <!-- ========================== -->
    <eat-comment />
    <declare-styleable name="PropertyAnimator">
        <!-- Name of the property being animated. -->
        <attr name="android:propertyName" />
        <!-- The path used to animate the properties in the ObjectAnimator -->
        <attr name="vc_pathData"/>
    </declare-styleable>
</resources>
